image:
  - Visual Studio 2019
environment:
  matrix:
    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.x"
      PYTHON_ARCH: "64"
init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  - "%PYTHON%\\python -m pip install --upgrade pip"
  - pip install wheel
  # for many packages
  - "%PYTHON%\\Scripts\\pip install -r requirements-win.txt"
  # install precompiled versions not available on pypi
  - "%PYTHON%\\Scripts\\pymy_install3 llvmlite numba"
  # onnx
  #- git clone -b master --single-branch https://github.com/onnx/onnx.git --recursive
  #- cd onnx
  #- set ONNX_ML=1
  #- set ONNX_BUILD_TESTS=1
  #- set ONNXIFI_DUMMY_BACKEND=1
  #- python setup.py bdist_wheel
  #- dir dist
  #- python setup.py install
  #- cd ..
  # onnxruntime
  - "%PYTHON%\\Scripts\\pip install -i https://test.pypi.org/simple/ ort-nightly"
  # other dependencies
  - "%PYTHON%\\Scripts\\pip install -r requirements.txt --no-deps"

build: off

before_test:
  - "%PYTHON%\\python -u setup.py build_ext --inplace"

test_script:
  - "%PYTHON%\\python -u setup.py unittests -d 15 -g \".*((LONG)|(SKIP)|(notebooks)).*\""

after_test:
  - "%PYTHON%\\python -u setup.py bdist_wheel"

artifacts:
  - path: dist
    name: mlprodict
  - path: onnx\dist
    name: onnx
