version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.8.6-buster
    
    working_directory: ~/repo
    
    steps:
      - checkout

      - restore_cache:
          keys:
          - v3-dependencies-{{ checksum "requirements.txt" }}
          - v3-dependencies-

#       - run:
#           name: Install omp
#           command: |
#                     sudo apt-get install -y libomp-dev
          
      - run:
          name: Install pandoc
          command: |
                    sudo apt-get update 
                    wget https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-1-amd64.deb
                    sudo dpkg -i pandoc-2.10.1-1-amd64.deb
          
      - run:
          name: Install tex
          command: |
                    sudo apt-get install -y texlive
                    sudo apt-get install -y texlive-latex-extra
                    sudo apt-get install -y dvipng
          
      - run:
          name: install language package for onnxruntime
          command: |
                    sudo locale-gen

      - run:
          name: Install 7z, unrar
          command: |
                    sudo apt-get install -y p7zip-full
          
      - run:
          name: Install InkScape
          command: |
                    sudo apt-get install -y inkscape
          
      - run:
          name: Install graphviz
          command: |
                    sudo apt-get install -y graphviz
          
      - run:
          name: install dependencies (1)
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements_conda.txt

      - run:
          name: install dependencies (2)
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: install onnxruntime
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip freeze | grep onnx
            pip install onnxruntime>=1.4.0 --verbose
            pip show onnxruntime

      - save_cache:
          paths:
            - ./venv
          key: v3-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: install sklearn-onnx, onnxconverter-common
          command: |
            . venv/bin/activate
            pip install git+https://github.com/xadupre/onnxconverter-common.git@jenkins --upgrade
            pip install git+https://github.com/xadupre/sklearn-onnx.git@jenkins --upgrade

      - run:
          name: pip freeze
          command: |
            . venv/bin/activate
            pip freeze

      - run:
          name: compile and build
          command: |
            . venv/bin/activate
            python setup.py build_ext --inplace

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py unittests -d 7 -g ".*((LONG)|(SKIP)).*"
          # Some tests take for ever, cutting the list.

      - run:
          name: wheel
          command: |
            . venv/bin/activate
            python setup.py bdist_wheel
            mkdir -p test-reports/dist
            cp dist/*.whl test-reports/dist
            mkdir -p test-reports/src
            cp -r  mlprodict test-reports/src

      #- run:
      #    name: documentation
      #    command: |
      #      . venv/bin/activate
      #      python setup.py build_sphinx
            
      #- run:
      #    name: copy documentation
      #    command: |
      #      mkdir -p test-reports/doc
      #      zip -r -9  test-reports/doc/documentation_html.zip _doc/sphinxdoc/build/html
            
      - store_artifacts:
          path: test-reports
          destination: test-reports